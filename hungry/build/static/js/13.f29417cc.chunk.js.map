{"version":3,"sources":["views/commodity.js"],"names":["Commodity","_this","this","_this$props","props","goods","num","console","log","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","map","item","index","key","onClick","handleToele","bind","name","ref","foods","ele","i","commodityDetails","src","image","alt","description","price","oldPrice","handleNum","flag","e","count","changecount","stopPropagation","BScroll","click","right","eles","refs","rightele","children","scrollToElement","history","push","pathname","query","Component","connect","state","dispatch","type"],"mappings":"+KAKMA,mLACO,IAAAC,EAAAC,KAAAC,EACcD,KAAKE,MAAlBC,EADDF,EACCE,MADDF,EACOG,IAEZ,OADAC,QAAQC,IAAIH,GAERI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAEPP,GAASA,EAAMQ,IAAI,SAACC,EAAMC,GAAP,OACfN,EAAAC,EAAAC,cAAA,KAAGK,IAAKD,EAAOE,QAAShB,EAAKiB,YAAYC,KAAKlB,EAAKc,IAASD,EAAKM,SAI7EX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAMU,IAAI,YACNhB,GAASA,EAAMQ,IAAI,SAACC,EAAMC,GACtB,OAAON,EAAAC,EAAAC,cAAA,OAAKK,IAAKD,GACbN,EAAAC,EAAAC,cAAA,UAAKG,EAAKM,MAENN,EAAKQ,MAAMT,IAAI,SAACU,EAAKC,GACjB,OAAOf,EAAAC,EAAAC,cAAA,MAAIK,IAAKQ,EAAGP,QAAS,kBAAIhB,EAAKwB,iBAAiBV,EAAMQ,EAAIH,QAC5DX,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,OAAKe,IAAKH,EAAII,MAAOC,IAAI,MAE7BnB,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,SAAIY,EAAIH,MACRX,EAAAC,EAAAC,cAAA,SAAIY,EAAIM,aACRpB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WACTH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,SAAgCW,EAAIO,OACpCrB,EAAAC,EAAAC,cAAA,kBAAKY,EAAIQ,WAEbtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,UAAQM,QAAShB,EAAK+B,UAAUb,KAAKlB,EAAKsB,EAAIjB,IAAIkB,EAAET,GAAM,IAA1D,OACAN,EAAAC,EAAAC,cAAA,YAAOY,EAAIjB,KACXG,EAAAC,EAAAC,cAAA,UAAQM,QAAShB,EAAK+B,UAAUb,KAAKlB,EAAKsB,EAAIjB,IAAIkB,EAAET,GAAM,IAA1D,qDAgBzCT,EAAIkB,EAAET,EAAMkB,EAAKC,GACxB,IAAIC,EAAQF,EAAO3B,EAAI,EAAIA,EAAI,EAC/BJ,KAAKE,MAAMgC,YAAYD,EAAMX,EAAET,GAC/BmB,EAAEG,+DAGF,IAAIC,IAAQ,WAAW,CACnBC,OAAM,IAEV,IAAID,IAAQ,iDAEJvB,GACR,IAAIyB,EAAS,IAAIF,IAAQ,aACrBG,EAAOvC,KAAKwC,KAAKC,SAASC,SAAS7B,GACvCyB,EAAMK,gBAAgBJ,EAAK,8CAEdP,EAAEnB,EAAMK,GACrBlB,KAAKE,MAAM0C,QAAQC,KAAK,CAACC,SAAS,oBAAoBC,MAAM,CAAClC,MAAQA,EAAMK,KAAOA,KAClFc,EAAEG,yBArEca,aAyETC,sBAAQ,SAACC,GAEpB,MAAO,CACH/C,MAAO+C,EAAM/C,QAElB,SAACgD,GACA,MAAO,CACHjB,YADG,SACS9B,EAAIkB,EAAET,GACdsC,EAAS,CAACC,KAAK,eAAehD,MAAIkB,IAAET,aARjCoC,CAWZnD","file":"static/js/13.f29417cc.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport BScroll from \"better-scroll\"\r\nimport { connect } from \"react-redux\"\r\nimport {NavLink} from \"react-router-dom\"\r\n\r\nclass Commodity extends Component {\r\n    render() {\r\n        let { goods,num} = this.props\r\n        console.log(goods)\r\n        return (\r\n            <div className=\"lwqwrap\">\r\n                <div className=\"lwqleft\">\r\n                    {\r\n                        goods && goods.map((item, index) =>\r\n                            <p key={index} onClick={this.handleToele.bind(this,index)}>{item.name}</p>\r\n                        )\r\n                    }\r\n                </div>\r\n                <div className=\"lwqright\">\r\n                    <div  ref=\"rightele\">\r\n{                       goods && goods.map((item, index) => {\r\n                            return <div key={index}>\r\n                                <h3>{item.name}</h3>\r\n                                { \r\n                                    item.foods.map((ele, i) => {\r\n                                        return <dl key={i} onClick={()=>this.commodityDetails(index,ele.name)}>\r\n                                            <dt>\r\n                                                <img src={ele.image} alt=\"\" />\r\n                                            </dt>\r\n                                            <dd>\r\n                                                <p>{ele.name}</p>\r\n                                                <p>{ele.description}</p>\r\n                                                <p className=\"lwqshop\">\r\n                                                    <div className=\"lwqprice\">\r\n                                                        <span className=\"lwqpricered\">￥{ele.price}</span>\r\n                                                        <i>￥{ele.oldPrice}</i>\r\n                                                    </div>\r\n                                                    <div className=\"lwbtn\">\r\n                                                        <button onClick={this.handleNum.bind(this,ele.num,i,index,false)}> - </button>\r\n                                                        <span>{ele.num}</span>\r\n                                                        <button onClick={this.handleNum.bind(this,ele.num,i,index,true)}> + </button>\r\n                                                    </div>\r\n                                                </p>\r\n                                            </dd>\r\n                                        </dl>\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        })\r\n                    }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n   \r\n    handleNum (num,i,index,flag,e){\r\n        let count = flag ? num+1 : num-1\r\n        this.props.changecount(count,i,index)\r\n        e.stopPropagation()\r\n    }\r\n    componentDidUpdate(){\r\n        new BScroll(\".lwqleft\",{\r\n            click:true\r\n        })\r\n        new BScroll(\".lwqright\")\r\n    }\r\n    handleToele(index){\r\n        let right =  new BScroll(\".lwqright\")\r\n        let eles = this.refs.rightele.children[index]\r\n        right.scrollToElement(eles,200)\r\n    }\r\n    commodityDetails(e,index,name){\r\n        this.props.history.push({pathname:\"/CommodityDetails\",query:{'index':index,\"name\":name}})\r\n        e.stopPropagation()\r\n    }\r\n} \r\n\r\nexport default connect((state) => {\r\n    // console.log(state)\r\n    return {\r\n        goods: state.goods,\r\n    }\r\n}, (dispatch) => {\r\n    return {\r\n        changecount(num,i,index){\r\n            dispatch({type:\"CHANGE_COUNT\",num,i,index})\r\n        }\r\n    }\r\n})(Commodity)\r\n\r\n"],"sourceRoot":""}